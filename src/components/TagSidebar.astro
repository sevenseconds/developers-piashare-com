---
import { getCollection } from 'astro:content';

interface Props {
  currentLanguage: 'th' | 'en';
  currentTag?: string;
}

const { currentLanguage, currentTag } = Astro.props;

// Get all posts and calculate tag counts for current language
const allPosts = await getCollection('blog');
const languagePosts = allPosts.filter(post => post.data.lang === currentLanguage);

// Count tags
const tagCounts = new Map<string, number>();
languagePosts.forEach(post => {
  post.data.tags.forEach(tag => {
    tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
  });
});

// Sort tags by count (descending) then alphabetically
const sortedTags = Array.from(tagCounts.entries())
  .sort((a, b) => {
    if (b[1] !== a[1]) return b[1] - a[1]; // Sort by count descending
    return a[0].localeCompare(b[0]);
  });

const basePath = currentLanguage === 'en' ? '/en' : '';
---

<aside class="fixed right-0 top-0 h-full w-80 bg-white dark:bg-black border-l border-gray-200 dark:border-gray-800 hidden lg:block overflow-y-auto">
  <div class="p-6">
    <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
      {currentLanguage === 'th' ? 'แท็ก' : 'Tags'}
    </h2>
    
    <div class="bg-white dark:bg-gray-900 rounded-2xl overflow-hidden shadow-sm">
      <div class="space-y-1 p-3">
        {sortedTags.map(([tag, count]) => {
          const tagSlug = tag.toLowerCase().replace(/\s+/g, '-');
          const isActive = currentTag === tag;
          
          return (
            <a
              href={`${basePath}/tags/${tagSlug}`}
              class={`block p-3 rounded-lg transition-colors duration-200 ${
                isActive
                  ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800'
                  : 'hover:bg-gray-50 dark:hover:bg-gray-800 border border-transparent'
              }`}
            >
            <div class="flex items-center justify-between">
              <span class={`font-medium ${
                isActive
                  ? 'text-blue-700 dark:text-blue-300'
                  : 'text-gray-900 dark:text-white'
              }`}>
                {tag}
              </span>
              <span class={`text-sm px-2 py-1 rounded-full ${
                isActive
                  ? 'bg-blue-100 dark:bg-blue-800 text-blue-700 dark:text-blue-300'
                  : 'bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400'
              }`}>
                {count}
              </span>
            </div>
          </a>
        );
        })}
      </div>
    </div>

    {sortedTags.length === 0 && (
      <div class="bg-white dark:bg-gray-900 rounded-2xl overflow-hidden shadow-sm">
        <p class="text-gray-600 dark:text-gray-400 text-center py-8">
          {currentLanguage === 'th' ? 'ไม่พบแท็ก' : 'No tags found'}
        </p>
      </div>
    )}
  </div>
</aside>